map "http://ahdis.ch/ig/cda-fhir-maps/StructureMap/BundleToCdaChEmedMedicationDispenseDocument" = "FHIR Bundle to CDA-CH-EMED Medication Dispense document"


// Medication Dispense document, 2.16.756.5.30.1.1.10.1.5
// 2020-01-09 Oliver Egger, copyright ahdis ag, Apache License 
// CDA-CH-EMED:  https://art-decor.org/art-decor/decor-project--cdachemed-
// FHIR CH-EMED: http://fhir.ch/ig/ch-emed/index.html


uses "http://hl7.org/fhir/cda/StructureDefinition/ClinicalDocument" alias ClinicalDocument as target
uses "http://hl7.org/fhir/cda/StructureDefinition/AssignedAuthor" alias AssignedAuthor as target
uses "http://hl7.org/fhir/cda/StructureDefinition/AssignedEntity" alias AssignedEntity as target
uses "http://hl7.org/fhir/cda/StructureDefinition/Author" alias Author as target
uses "http://hl7.org/fhir/cda/StructureDefinition/CustodianOrganization" alias CustodianOrganization as target
uses "http://hl7.org/fhir/cda/StructureDefinition/IVL_TS" alias IVL_TS as target
uses "http://hl7.org/fhir/cda/StructureDefinition/EIVL_TS" alias EIVL_TS as target
uses "http://hl7.org/fhir/cda/StructureDefinition/PatientRole" alias PatientRole as target
uses "http://hl7.org/fhir/cda/StructureDefinition/RecordTarget" alias RecordTarget as target
uses "http://hl7.org/fhir/cda/StructureDefinition/Section" alias Section as target
uses "http://hl7.org/fhir/cda/StructureDefinition/SubstanceAdministration" alias SubstanceAdministration as target
uses "http://hl7.org/fhir/cda/StructureDefinition/SXPR_TS" alias SXPR_TS as target
uses "http://hl7.org/fhir/cda/StructureDefinition/Supply" alias Supply as target

uses "http://hl7.org/fhir/StructureDefinition/Bundle" alias Bundle as source
uses "http://hl7.org/fhir/StructureDefinition/Composition" alias Composition as source
uses "http://hl7.org/fhir/StructureDefinition/Patient" alias Patient as source
uses "http://hl7.org/fhir/StructureDefinition/Practitioner" alias Practitioner as source
uses "http://hl7.org/fhir/StructureDefinition/Organization" alias Organization as source
uses "http://hl7.org/fhir/StructureDefinition/MedicationDispense" alias MedicationDispense as source
uses "http://hl7.org/fhir/StructureDefinition/Dosage" alias Dosage as source


imports "http://ahdis.ch/ig/cda-fhir-maps/StructureMap/FhirToCdaTypes"
imports "http://ahdis.ch/ig/cda-fhir-maps/StructureMap/BundleToCda"
imports "http://ahdis.ch/ig/cda-fhir-maps/StructureMap/BundleToCdaCh"


// _________________________ Document Level Template  _________________________ 


// source: http://build.fhir.org/ig/hl7ch/ch-emed/StructureDefinition-ch-emed-composition-medicationdispense.html
// target: https://art-decor.org/art-decor/decor-templates--cdachemed-?section=templates&id=2.16.756.5.30.1.1.10.1.5
group BundleToCdaChEmedMedicationDispenseDocument(source bundle : Bundle, target cda : ClinicalDocument) {
    bundle -> cda.recordTarget as recordTarget, cda.author as author then BundleToClinicalDocumentEmedMedicationDispenseDocument(bundle, recordTarget, author, cda) "bundle";
}


// source: http://build.fhir.org/ig/hl7ch/ch-emed/StructureDefinition-ch-emed-composition-medicationdispense.html
// target: https://art-decor.org/art-decor/decor-templates--cdachemed-?section=templates&id=2.16.756.5.30.1.1.10.1.5
group CompositionClinicalDocumentChEmedMedicationDispenseDocument(source bundle : Bundle, source composition : Composition, target cda : ClinicalDocument) {
  composition.section as section where $this.code.coding.where(system='http://loinc.org' and code='60590-7') -> cda.component as component then {
    section -> component.contextConductionInd = true "contextConductionInd";
    section -> component.structuredBody as structuredBody, structuredBody.component as component, component.section as cdasection then SectionDispenseSectionContentModule(bundle, section,cdasection) "cdasection";
  } "SectionDispenseSectionContentModule";
}


// _________________________ Section Level Templates _________________________ 


// source: http://build.fhir.org/ig/hl7ch/ch-emed/StructureDefinition-ch-emed-composition-medicationdispense.html
// target: https://art-decor.org/art-decor/decor-templates--cdachemed-?section=templates&id=2.16.756.5.30.1.1.10.3.11
group SectionDispenseSectionContentModule(source bundle : Bundle, source section: Section, target cdasection: CdaSection) extends SectionCdaSection{
  section -> cdasection.templateId as templateId, templateId.root='2.16.756.5.30.1.1.10.3.11' "CH-PHARM Dispense Section Content Module";
  section -> cdasection.templateId as templateId, templateId.root='1.3.6.1.4.1.19376.1.9.1.2.3' "IHE Dispense Section Content Module";
  
  // create section id if there is none in the fhir bundle (mapping source)
  section as section where $this.extension.where(url='http://fhir.ch/ig/ch-core/StructureDefinition/ch-ext-epr-sectionid').exists()=false 
    -> cdasection.id as id then { 
      section -> id.root = uuid() "section id"; // generated in lower case instead of upper case (see issue #7)
    } "extension";

  bundle.entry as entry then {
    entry.resource as medicationDispense where ('MedicationDispense'+'/'+$this.id) in %section.entry.reference -> cdasection.entry as entry, entry.supply as supply then MedicationTreatmentPlanEntryContentModule(bundle, medicationDispense, supply) "MedicationDispense";
  } "entry";
}


// _________________________ Entry Level Templates   _________________________ 


// source: Annotation note (e.g. http://build.fhir.org/ig/hl7ch/ch-emed/branches/master/StructureDefinition-ch-emed-medicationdispense.html)
// target: https://art-decor.org/art-decor/decor-templates--cdachemed-?section=templates&id=2.16.756.5.30.1.1.10.4.2
// Note/Warning: we assume that there is a narrativeLink extension which refers to the text which should be the same as in note.text
group AnnotationComment(source note: Annotation, target act: Act) {
  note -> act.classCode = 'ACT' "ACT";  
  note -> act.moodCode = 'EVN' "EVN";  
  note -> act.templateId as templateId, templateId.root = '2.16.756.5.30.1.1.10.4.2' "TemplateId";
  note -> act.templateId as templateId, templateId.root = '2.16.840.1.113883.10.20.1.40' "TemplateId";
  note -> act.templateId as templateId, templateId.root = '1.3.6.1.4.1.19376.1.5.3.1.4.2' "TemplateId";
  note -> act.code as code, code.code = '48767-8', code.codeSystem = '2.16.840.1.113883.6.1', code.displayName='Annotation comment', code.codeSystemName='LOINC' "code";
  note.extension as extension where $this.url='http://hl7.org/fhir/StructureDefinition/narrativeLink' then {
    extension.valueUrl as valueUrl -> act.text as text,
      text.reference as reference, reference.value=valueUrl "reference";
  } "id";
  note -> act.statusCode as code, code.code = 'completed' "statuscode";
}


// source: http://build.fhir.org/ig/hl7ch/ch-emed/branches/master/StructureDefinition-ch-emed-medicationdispense.html
// target: https://art-decor.org/art-decor/decor-templates--cdachemed-?id=2.16.756.5.30.1.1.10.4.39
group Substitution(source substitution: Substitution, target act: Act) {
  substitution -> act.classCode = 'ACT' "ACT";  
  substitution -> act.moodCode = 'EVN' "EVN";  
  substitution -> act.templateId as templateId, templateId.root = '1.3.6.1.4.1.19376.1.9.1.3.9.2' "TemplateId";
  substitution.type as type -> act.code as code then CodeableConceptCE(type, code) "substitution";
  substitution -> act.statusCode as statusCode, statusCode.code = 'completed' "status code";
}


// source: http://build.fhir.org/ig/hl7ch/ch-emed/branches/master/StructureDefinition-ch-emed-medicationdispense.html
// target: https://art-decor.org/art-decor/decor-templates--cdachemed-?section=templates&id=2.16.756.5.30.1.1.10.4.33&effectiveDate=2019-12-11T11:34:24&language=en-US
group ManufacturedMaterialEntryContentModule(source bundle : Bundle, source medicationDispense: MedicationDispense, source medication: Medication, target manufacturedMaterial: ManufacturedMaterial) {
  medication -> manufacturedMaterial.classCode = 'MMAT' "MMAT";  
  medication -> manufacturedMaterial.determinerCode = 'KIND' "KIND";  
  medication -> manufacturedMaterial.templateId as templateId, templateId.root = '2.16.756.5.30.1.1.10.4.33' "CH-PHARM Manufactured Material Content Modul";
  medication -> manufacturedMaterial.templateId as templateId, templateId.root = '1.3.6.1.4.1.19376.1.9.1.3.1' "TemplateId";
  
  medication.code as code then {
    code.text as text -> manufacturedMaterial.name as name, name.other = text "brandname";
  } "name";

  medication.code as code then {
    // #dis.no.brandedmedication
    code.extension as extension where $this.url='http://hl7.org/fhir/StructureDefinition/narrativeLink' -> manufacturedMaterial.code as code then {
      extension.valueUrl as valueUrl -> code.originalText as text,
        text.reference as reference, reference.value=valueUrl "reference";
    } "id";
    
    code.coding as coding -> manufacturedMaterial.code as ce then CodingCE(coding,ce) "code";
  } "code";

  medication.form as form then {
    form.coding as coding -> manufacturedMaterial.formCode as formCode then CodingCE(coding, formCode) "formCode";
  } "form";

  medication.code as code -> manufacturedMaterial.asContent as asContent, asContent.classCode='CONT', asContent.containerPackagedMedicine as containerPackagedMedicine then {
    code -> containerPackagedMedicine.classCode = 'CONT' "CONT";  
    code -> containerPackagedMedicine.determinerCode = 'INSTANCE' "INSTANCE";  
    code.coding as coding -> containerPackagedMedicine.code as ce then CodingCE(coding,ce) "pharm:code";
    code.text as text -> containerPackagedMedicine.name as name, name.other = text "pharm:name";
    medication.form as form then {
      form.coding as coding -> containerPackagedMedicine.formCode as formCode then CodingCE(coding, formCode) "pharm:formCode";
    } "form";   
    medication.amount as amount then {
      amount.numerator as numerator then {
        numerator.value as value -> containerPackagedMedicine.capacityQuantity as capacityQuantity, capacityQuantity.value = value "value";	    
      } "numerator";
    } "amount";
  } "code";

  medication.ingredient as ingredient -> manufacturedMaterial.ingredient as ingredient, ingredient.classCode = 'ACTI' then {
    ingredient.itemCodeableConcept as itemCodeableConcept -> ingredient.ingredient as pharmsubstance	then {
      itemCodeableConcept -> pharmsubstance.classCode = 'MMAT' "MMAT";
      itemCodeableConcept -> pharmsubstance.determinerCode = 'KIND' "KIND";
      itemCodeableConcept.text as text -> pharmsubstance.name as name, name.other = text "name";
      itemCodeableConcept.coding as coding then {
        coding -> pharmsubstance.code as ce then CodingCE(coding, ce) "formCode";
      } "coding";
    } "PharmSubstance";
    ingredient.strength as strength -> ingredient.quantity as quantity then RatioRTOPQPQ(strength,quantity) "strength";
  } "ingredient";
}


// source: http://build.fhir.org/ig/hl7ch/ch-emed/branches/master/StructureDefinition-ch-emed-medicationdispense.html
// target: https://art-decor.org/art-decor/decor-templates--cdachemed-?section=templates&id=2.16.756.5.30.1.1.10.4.42
group MedicationTreatmentPlanEntryContentModule(source bundle : Bundle, source medicationDispense: MedicationDispense, target supply: Supply) {
  medicationDispense -> supply.classCode = 'SPLY' "SPLY";  
  medicationDispense -> supply.moodCode = 'EVN' "EVN";  
  medicationDispense -> supply.templateId as templateId, templateId.root = '2.16.756.5.30.1.1.10.4.42' "CH-PHARM Dispense Item Entry Content Module";
  medicationDispense -> supply.templateId as templateId, templateId.root = '1.3.6.1.4.1.19376.1.9.1.3.4' "IHE PHARM DIS";
  medicationDispense -> supply.templateId as templateId, templateId.root = '1.3.6.1.4.1.19376.1.5.3.1.4.7.3' "Supply Entry";
  medicationDispense -> supply.templateId as templateId, templateId.root = '2.16.840.1.113883.10.20.1.34' "CCD";

  medicationDispense.identifier as identifier -> supply.id as id then IdentifierII(identifier, id) "id";
  medicationDispense.extension as extension where $this.url='http://hl7.org/fhir/StructureDefinition/narrativeLink' -> supply.text as text, text.reference as reference then {
    extension.valueUrl as valueUrl -> reference.value = valueUrl "valueUrl";
  } "narrativeLink";  
  
  medicationDispense.contained as medication where ('#'+$this.id) in %medicationDispense.medicationReference.reference 
    -> supply.product as product, product.manufacturedProduct as manufacturedProduct,
        manufacturedProduct.classCode = 'MANU' then {
    medication -> manufacturedProduct.templateId as templateId, templateId.root = '1.3.6.1.4.1.19376.1.5.3.1.4.7.2' "MP TemplateId";
    medication -> manufacturedProduct.templateId as templateId, templateId.root = '2.16.840.1.113883.10.20.1.53' "MP TemplateId";
    medication -> manufacturedProduct.manufacturedMaterial as manufacturedMaterial then ManufacturedMaterialEntryContentModule(bundle, medicationDispense, medication, manufacturedMaterial) "manufacturedMaterial";
  } "contained";     
  // TODO: AUTHOR1 Medication Treatment Plan Author
  // TODO: AUTHOR2 Community Medication Treatment Plan document author

  // dosage for normal dosing, as no sequences are present there
  medicationDispense.dosageInstruction as dosage where $this.conformsTo('http://fhir.ch/ig/ch-emed/StructureDefinition/ch-emed-dosage-structured') and $this.sequence.empty()
    then DosageInstructionsStartStopFrequency(dosage, supply) "DosageSubstanceAdministration";

  // dosage for split dosing, as sequences are present there
  medicationDispense -> supply.entryRelationship as entryRelationship then {
    medicationDispense -> entryRelationship.substanceAdministration as substanceAdministration then {
      
      // split dosing (with sequences): effectiveTime (start/stop) & routeCode & consumable
      medicationDispense.dosageInstruction first as dosage where $this.conformsTo('http://fhir.ch/ig/ch-emed/StructureDefinition/ch-emed-dosage-structured') and $this.sequence.exists()
        -> substanceAdministration then DosageInstructionsEntryStartStopRoute(dosage, entryRelationship, substanceAdministration) "DosageSubstanceAdministration";

      // split dosing (with sequences): sequence number, effectiveTime (when), dose quantity, consumable
      medicationDispense.dosageInstruction as dosage where $this.conformsTo('http://fhir.ch/ig/ch-emed/StructureDefinition/ch-emed-dosage-structured') and $this.sequence.exists()
        -> substanceAdministration.entryRelationship as entryRelationship, entryRelationship.typeCode = 'COMP' 
            then DosageInstructionsEntryDosageChange(dosage, entryRelationship) "DosageSubstanceAdministration";

    } "substanceAdministration";
  } "entryRelationship";

  medicationDispense.extension as extension where url='http://fhir.ch/ig/ch-emed/StructureDefinition/ch-emed-ext-treatmentplan' 
    -> supply.entryRelationship as entryRelationship, entryRelationship.typeCode='REFR', 
        entryRelationship.substanceAdministration as substanceAdministration 
          then MTPReferenceEntryContentModule(extension, substanceAdministration) "MTP Reference";

  // TODO: Patient Medication Instructions Contains 1.3.6.1.4.1.19376.1.5.3.1.4.3 IHE Patient Medication Instructions (DYNAMIC)
  // TODO: Amount of units of the consumable to dispense
  // TODO: ID of parent container (Community Medication Treatment Plan document)
  // TODO: Precondition Criterion

  medicationDispense.dosageInstruction as dosage where $this.conformsTo('http://fhir.ch/ig/ch-emed/StructureDefinition/ch-emed-dosage-nonstructured')
    -> supply.entryRelationship as entryRelationship, entryRelationship.typeCode='COMP', 
        entryRelationship.substanceAdministration as substanceAdministration 
          then DosageInstructionsNonStructuredEntryContentModule(dosage, substanceAdministration) "DosageInstructionsNonStructuredEntryContentModule";

  // TODO: Contains 2.16.756.5.30.1.1.10.4.37 Dosage Intake Mode Entry Content Module (DYNAMIC)
  //       see group DosageInstructionsNonStructuredEntryContentModule

  medicationDispense.quantity as quantity -> supply.quantity as supplyQuantity then {
    quantity.unit as unit -> supplyQuantity.unit = unit "unit";
    quantity.value as value -> supplyQuantity.value = value "value";
  } "quantity";
  
  medicationDispense.note as note 
    -> supply.entryRelationship as entryRelationship, entryRelationship.typeCode='COMP', 
        entryRelationship.act as act 
          then AnnotationComment(note, act) "AnnotationComment";

  medicationDispense.substitution as substitution
    -> supply.entryRelationship as entryRelationship, entryRelationship.typeCode='COMP', 
        entryRelationship.act as act
          then Substitution(substitution, act) "Substitution";
}


// source: http://fhir.ch/ig/ch-emed/StructureDefinition/ch-emed-dosage-structured
// target: https://art-decor.org/art-decor/decor-templates--ch-pharm-?id=2.16.756.5.30.1.1.10.4.35 
// dosage for normal dosing (without sequences)
group DosageInstructionsStartStopFrequency(source dosage: Dosage, target supply : Supply) {
  dosage -> supply.entryRelationship as entryRelationship then {
    dosage -> entryRelationship.typeCode = 'COMP' "COMP";
    dosage -> entryRelationship.substanceAdministration as substanceAdministration then {
      dosage -> substanceAdministration.classCode = 'SBADM' "SBADM";
      dosage -> substanceAdministration.moodCode = 'INT' "INT";
      dosage -> substanceAdministration.templateId as templateId, templateId.root = '1.3.6.1.4.1.19376.1.9.1.3.6' "Template Id";
      dosage -> substanceAdministration.templateId as templateId, templateId.root = '1.3.6.1.4.1.19376.1.5.3.1.4.7.1' "Normal Dose";
      dosage -> substanceAdministration as substanceAdministration then EffectiveTimeStartEnd(dosage, substanceAdministration) "effective time start end";
      dosage -> substanceAdministration as substanceAdministration then EffectiveTimeWhenNormal(dosage, substanceAdministration) "effective time when";
      dosage.route as route -> substanceAdministration.routeCode as routeCode then CodeableConceptCE(route, routeCode) "route";
      dosage -> substanceAdministration as substanceAdministration then DoseQuantity(dosage, substanceAdministration) "dose quantity";
      dosage -> substanceAdministration as substanceAdministration, substanceAdministration.consumable as consumable,
        consumable.manufacturedProduct as manufacturedProduct, manufacturedProduct.manufacturedMaterial as manufacturedMaterial,
        manufacturedMaterial.nullFlavor='NA' "consumable";
    } "substanceAdministration";
  }"entryRelationship";
}


// source: http://fhir.ch/ig/ch-emed/StructureDefinition/ch-emed-dosage-structured
// target: https://art-decor.org/art-decor/decor-templates--ch-pharm-?id=2.16.756.5.30.1.1.10.4.36
// dosage for split dosing: effectiveTime (start/stop) & routeCode & consumable
group DosageInstructionsEntryStartStopRoute(source dosage: Dosage, target entryRelationship: entryRelationship, target substanceAdministration: SubstanceAdministration) {
  dosage -> entryRelationship.typeCode = 'COMP' "COMP";
  dosage -> substanceAdministration.classCode = 'SBADM' "SBADM";
  dosage -> substanceAdministration.moodCode = 'INT' "INT";
  dosage -> substanceAdministration.templateId as templateId, templateId.root = '1.3.6.1.4.1.19376.1.9.1.3.6' "Template Id";
  
  // if the FHIR document has a dosage templateId -> take over the templateId  
  dosage.extension as extension where $this.url='http://fhir.ch/ig/ch-emed/StructureDefinition/ch-emed-ext-dosagetype' then {
    extension.valueIdentifier as valueIdentifier then {
      valueIdentifier.value as value -> substanceAdministration.templateId as templateId, templateId.root = value "template id";
    } "valueIdentifier";
  } "extension";

  // if the FHIR doucment has no dosage templateId -> create templateId for split dose
  dosage as dosage where $this.extension.where(url='http://fhir.ch/ig/ch-emed/StructureDefinition/ch-emed-ext-dosagetype').exists()=false then {
    dosage -> substanceAdministration.templateId as templateId, templateId.root = '1.3.6.1.4.1.19376.1.5.3.1.4.9' "Split Dose";
  } "no extension";


  dosage -> substanceAdministration as substanceAdministration then EffectiveTimeStartEnd(dosage, substanceAdministration) "effective time start end";
  dosage.route as route -> substanceAdministration.routeCode as routeCode then CodeableConceptCE(route, routeCode) "route";
  dosage -> substanceAdministration.consumable as consumable, consumable.manufacturedProduct as manufacturedProduct, 
    manufacturedProduct.manufacturedMaterial as manufacturedMaterial, manufacturedMaterial.nullFlavor='NA' "consumable";
}


// source: http://fhir.ch/ig/ch-emed/StructureDefinition/ch-emed-dosage-structured
// target: https://art-decor.org/art-decor/decor-templates--ch-pharm-?id=2.16.756.5.30.1.1.10.4.36
// dosage for split dosing: sequence number, effectiveTime (when), dose quantity, consumable
group DosageInstructionsEntryDosageChange(source dosage: Dosage, target entryRelationship: entryRelationship) {
  dosage.sequence as sequence -> entryRelationship.sequenceNumber as sequenceNumber, sequenceNumber.value = sequence "sequence";
  dosage -> entryRelationship.substanceAdministration as substanceAdministration, 
    substanceAdministration.classCode = 'SBADM',
    substanceAdministration.moodCode = 'INT' then {
      dosage as dosage -> substanceAdministration then EffectiveTimeWhenSplit(dosage, substanceAdministration) "effective time when";
      dosage as dosage -> substanceAdministration then DoseQuantity(dosage, substanceAdministration) "dose quantity";
      dosage as dosage -> substanceAdministration.consumable as consumable, consumable.manufacturedProduct as manufacturedProduct, 
          manufacturedProduct.manufacturedMaterial as manufacturedMaterial, manufacturedMaterial.nullFlavor='NA' "consumable";
    } "dosage";
}


// effective time low and high for dosage
group EffectiveTimeStartEnd(source dosage: Dosage, target substanceAdministration: SubstanceAdministration) {
  dosage.timing as timing then {
    timing.repeat as repeat then {
      repeat.bounds: Period as bounds -> substanceAdministration.effectiveTime = create('IVL_TS') as effectiveTime then {
        bounds.start as start -> effectiveTime.low as low then DateTS(start, low) "low"; 
        bounds.end as end -> effectiveTime.high as high then DateTS(end, high) "high"; 
      } "bounds";
    } "repeat";
  } "timing"; 
}

// effective time when for normal dosage
group EffectiveTimeWhenNormal(source dosage: Dosage, target substanceAdministration : SubstanceAdministration) {
  dosage.timing as timing then {
    timing.repeat as repeat then {
      repeat where $this.when.count()=1 -> substanceAdministration.effectiveTime = create('EIVL_TS') as effectiveTime, effectiveTime.operator='A' then {
          repeat.when as when -> effectiveTime.event as event, event.code = when "when";
      } "when";
      repeat where $this.when.count()>1 -> substanceAdministration.effectiveTime = create('SXPR_TS') as effectiveTime, effectiveTime.operator='A' then {
        repeat.when first as when -> effectiveTime.comp = create('EIVL_TS') as comp then {
          when -> comp.event as event, event.code = when "when";
        } "comp";       
        repeat.when not_first as when -> effectiveTime.comp = create('EIVL_TS') as comp, comp.operator='I' then {
          when -> comp.event as event, event.code = when "when";
        } "compnotfirst";       
      } "when";
    } "repeat";
  } "timing"; 
}

// effective time when for split dosage
group EffectiveTimeWhenSplit(source dosage: Dosage, target substanceAdministration : SubstanceAdministration) {
  dosage.timing as timing then {
    timing.repeat as repeat then {
      repeat where $this.when.count()=1 -> substanceAdministration.effectiveTime = create('EIVL_TS') as effectiveTime then {
          repeat.when as when -> effectiveTime.event as event, event.code = when "when";
      } "when";
      repeat where $this.when.count()>1 -> substanceAdministration.effectiveTime = create('SXPR_TS') as effectiveTime, effectiveTime.operator='A' then {
        repeat.when first as when -> effectiveTime.comp = create('EIVL_TS') as comp then {
          when -> comp.event as event, event.code = when "when";
        } "comp";       
        repeat.when not_first as when -> effectiveTime.comp = create('EIVL_TS') as comp, comp.operator='I' then {
          when -> comp.event as event, event.code = when "when";
        } "compnotfirst";       
      } "when";
    } "repeat";
  } "timing"; 
}

// dose quantity for dosage
group DoseQuantity(source dosage: Dosage, target substanceAdministration : SubstanceAdministration) {
  dosage.doseAndRate as doseAndRate -> substanceAdministration.doseQuantity as doseQuantity then {
    doseAndRate.dose : Quantity as quantity then {
      quantity.value as value -> doseQuantity.center as center, center.value = value "value";
    } "quantity";
  } "doseQuantity";
}


// source: http://build.fhir.org/ig/hl7ch/ch-emed/branches/master/StructureDefinition-ch-emed-ext-treatmentplan.html
// target: https://art-decor.org/art-decor/decor-templates--ch-pharm-?section=templates&id=2.16.756.5.30.1.1.10.4.45&effectiveDate=2017-01-10T15:34:25&language=en-US
group MTPReferenceEntryContentModule(source ext: Extension, target substanceAdministration : SubstanceAdministration) {
  ext -> substanceAdministration.classCode = 'SBADM' "SBADM";  
  ext -> substanceAdministration.moodCode = 'INT' "INT";  
  ext -> substanceAdministration.templateId as templateId, templateId.root = '1.3.6.1.4.1.19376.1.9.1.3.10' "Reference to Medication Treatment Plan Item General Specification Template ID";
  ext -> substanceAdministration.templateId as templateId, templateId.root = '2.16.756.5.30.1.1.10.4.45' "CH-PHARM template ID	";
  ext.extension as extension where $this.url='id' then {
    extension.valueIdentifier as valueIdentifier -> substanceAdministration.id as id then IdentifierII(valueIdentifier, id) "id";
  } "id";
  ext -> substanceAdministration.code as code, code.code = 'MTPItem', code.codeSystem = '1.3.6.1.4.1.19376.1.9.2.2',
    code.displayName = 'Medication Treatment Plan Item',  code.codeSystemName = 'IHE Pharmacy Item Type List' "code";
  ext -> substanceAdministration.consumable as consumable,
           consumable.manufacturedProduct as manufacturedProduct,
             manufacturedProduct.manufacturedMaterial as manufacturedMaterial,
               manufacturedMaterial.nullFlavor = 'NA' "consumable";
  ext.extension as extension where $this.url='externalDocumentId' then {
    extension.valueIdentifier as valueIdentifier -> 
      substanceAdministration.reference as reference, 
      reference.typeCode = 'XCRPT',
      reference.externalDocument as externalDocument,
      externalDocument.id as id then IdentifierII(valueIdentifier, id) "id";
  } "externalDocumentId";
}


// source: http://build.fhir.org/ig/hl7ch/ch-emed/branches/master/StructureDefinition-ch-emed-dosage-nonstructured.html
// target: https://art-decor.org/art-decor/decor-templates--ch-pharm-?section=templates&id=2.16.756.5.30.1.1.10.4.52
// target: https://art-decor.org/art-decor/decor-templates--ch-pharm-?section=templates&id=2.16.756.5.30.1.1.10.4.37
// Note/Warning: we assume that there is a narrativeLink extension which refers to the text which should be the same as in note.text
group DosageInstructionsNonStructuredEntryContentModule(source dosage : Dosage, target substanceAdministration : SubstanceAdministration) {
  dosage -> substanceAdministration.classCode = 'SBADM' "SBADM";  
  dosage -> substanceAdministration.moodCode = 'INT' "INT";  
  dosage -> substanceAdministration.templateId as templateId, templateId.root = '2.16.756.5.30.1.1.10.4.37' "template ID	";
  dosage.extension as extension where $this.url='http://hl7.org/fhir/StructureDefinition/narrativeLink' then {
    extension.valueUrl as valueUrl -> substanceAdministration.text as text,
      text.reference as reference, reference.value=valueUrl "reference";
  } "id";
  dosage -> substanceAdministration.consumable as consumable,
           consumable.manufacturedProduct as manufacturedProduct,
             manufacturedProduct.manufacturedMaterial as manufacturedMaterial,
               manufacturedMaterial.nullFlavor = 'NA' "consumable";
}


// _________________________ Header Level Templates _________________________ 


// source: http://build.fhir.org/ig/hl7ch/ch-emed/StructureDefinition-ch-emed-composition-medicationdispense.html
// target: 2.16.756.5.30.1.1.10.9.42
group BundleToClinicalDocumentEmedMedicationDispenseDocument(source bundle : Bundle, target recordTarget: RecordTarget, target author: Author, target cda : ClinicalDocument) extends BundleToClinicalDocumentCh {
  bundle -> cda.templateId as templateId, templateId.root = '2.16.756.5.30.1.127.1.4' "Exchange format according to the Swiss EPR";
  bundle -> cda.templateId as templateId, templateId.root = '1.3.6.1.4.1.19376.1.5.3.1.1.1' "IHE PCC";
  bundle -> cda.templateId as templateId, templateId.root = '1.3.6.1.4.1.19376.1.9.1.1.3' "IHE Pharmacy Dispense Document Content Module";
  bundle -> cda.templateId as templateId, templateId.root = '2.16.756.5.30.1.1.10.1.5' "CDA-CH-EMED Medication Dispense document";
  bundle.entry as entry then {
    entry.resource as resource where $this.ofType(FHIR.Composition) then CompositionClinicalDocumentChEmedMedicationDispenseDocument(bundle, resource, cda);
  };
}


// _________________________ Template Type not specified   _________________________ 