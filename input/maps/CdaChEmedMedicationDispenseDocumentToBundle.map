map "http://ahdis.ch/ig/cda-fhir-maps/StructureMap/CdaChEmedMedicationDispenseDocumentToBundle" = "CDA MedicationDispenseDocument to FHIR"


// Medication Dispense document, 2.16.756.5.30.1.1.10.1.5
// 2020-02-11 Oliver Egger, Michaela Ziegler, copyright ahdis ag, Apache License 
// CDA-CH-EMED:  https://art-decor.org/art-decor/decor-project--cdachemed-
// FHIR CH-EMED: http://fhir.ch/ig/ch-emed/index.html


uses "http://hl7.org/fhir/cda/StructureDefinition/ClinicalDocument" alias ClinicalDocument as source
uses "http://hl7.org/fhir/cda/StructureDefinition/AssignedAuthor" alias AssignedAuthor as source
uses "http://hl7.org/fhir/cda/StructureDefinition/AssignedEntity" alias AssignedEntity as source
uses "http://hl7.org/fhir/cda/StructureDefinition/Author" alias Author as source
uses "http://hl7.org/fhir/cda/StructureDefinition/CustodianOrganization" alias CustodianOrganization as source
uses "http://hl7.org/fhir/cda/StructureDefinition/IVL_TS" alias IVL_TS as source
uses "http://hl7.org/fhir/cda/StructureDefinition/EIVL_TS" alias EIVL_TS as source
uses "http://hl7.org/fhir/cda/StructureDefinition/Observation" alias Observation as source
uses "http://hl7.org/fhir/cda/StructureDefinition/PatientRole" alias PatientRole as source
uses "http://hl7.org/fhir/cda/StructureDefinition/RecordTarget" alias RecordTarget as source
uses "http://hl7.org/fhir/cda/StructureDefinition/Section" alias Section as source
uses "http://hl7.org/fhir/cda/StructureDefinition/SubstanceAdministration" alias SubstanceAdministration as source
uses "http://hl7.org/fhir/cda/StructureDefinition/Supply" alias Supply as source
uses "http://hl7.org/fhir/cda/StructureDefinition/SXPR_TS" alias SXPR_TS as source

uses "http://hl7.org/fhir/StructureDefinition/Bundle" alias Bundle as target
uses "http://hl7.org/fhir/StructureDefinition/Composition" alias Composition as produced
uses "http://hl7.org/fhir/StructureDefinition/Patient" alias Patient as produced
uses "http://hl7.org/fhir/StructureDefinition/Practitioner" alias Practitioner as produced
uses "http://hl7.org/fhir/StructureDefinition/Organization" alias Organization as produced
uses "http://hl7.org/fhir/StructureDefinition/MedicationDispense" alias MedicationDispense as produced
uses "http://hl7.org/fhir/StructureDefinition/Dosage" alias Dosage as produced

imports "http://ahdis.ch/ig/cda-fhir-maps/StructureMap/CdaToFhirTypes"
imports "http://ahdis.ch/ig/cda-fhir-maps/StructureMap/CdaToBundle"
imports "http://ahdis.ch/ig/cda-fhir-maps/StructureMap/CdaChToBundle"

// _________________________ Document Level Template  _________________________ 

// source: https://art-decor.org/art-decor/decor-templates--cdachemed-?section=templates&id=2.16.756.5.30.1.1.10.1.5
// target: http://fhir.ch/ig/ch-emed/StructureDefinition/ch-emed-composition-medicationdispense.html
group CdaChEmedMedicationDispenseDocumentToBundle(source cda : ClinicalDocument, target bundle : Bundle) {
  cda ->  bundle.entry as e share e, 
             e.resource = create('Composition') as composition share composition, 
             composition.id = uuid() as uuid,
             e.fullUrl = append('urn:uuid:',uuid),
             bundle.entry as e2, 
             e2.resource = create('Patient') as patient share patient,
             patient.id = uuid() as uuid2,
             e2.fullUrl = append('urn:uuid:',uuid2)
             then ClinicalDocumentChEmedMedicationDispenseDocumentToBundle(cda, patient, composition, bundle) "ClinicalDocumentToBody";
}

// source: https://art-decor.org/art-decor/decor-templates--cdachemed-?section=templates&id=2.16.756.5.30.1.1.10.1.5
// target: http://fhir.ch/ig/ch-emed/StructureDefinition/ch-emed-composition-medicationdispense.html
group ClinicalDocumentChEmedMedicationDispenseDocumentToBundle(source cda : ClinicalDocument, target patient : Patient, target composition : Composition, target bundle : Bundle) extends ClinicalDocumentChToBundle {
  cda.component as component then {
    component.structuredBody as body then {
      body.component as component then {
        component.section as srcSection where (templateId.where(root='2.16.756.5.30.1.1.10.3.11')) -> composition.section as tgtSection then SectionDispenseSectionContentModule(srcSection, patient, tgtSection, bundle);
      } "component";
    } "body";
  } "component";
}

// _________________________ Section Level Templates _________________________ 

// source: https://art-decor.org/art-decor/decor-templates--cdachemed-?section=templates&id=2.16.756.5.30.1.1.10.3.11
// target: http://fhir.ch/ig/ch-emed/StructureDefinition/ch-emed-composition-medicationdispense.html
group SectionDispenseSectionContentModule(source source : Section, source patient : Patient, target target, target bundle: Bundle) extends ClinicalDocumentSection {
  source.entry as cdaEntry ->  bundle.entry as e,  e.resource = create('MedicationDispense') as medicationdispense,  
    medicationdispense.id = uuid() as uuid,
    e.fullUrl = append('urn:uuid:',uuid), 
    target.entry = create('Reference') as reference, reference.reference = reference(medicationdispense) then {
    cdaEntry.supply as supply then DispenseItemEntryContentModule(source, supply, patient, medicationdispense);
  };
}

// _________________________ Entry Level Templates   _________________________ 

// source: https://art-decor.org/art-decor/decor-templates--cdachemed-?section=templates&id=2.16.756.5.30.1.1.10.4.2
// target: Annotation note (e.g. http://build.fhir.org/ig/hl7ch/ch-emed/branches/master/StructureDefinition-ch-emed-medicationdispense.html)
group AnnotationComment(source section: Section, source act: Act, target note: Annotation) {
  act -> note.text =  (%section.text.substring(%section.text.indexOf(%act.text.reference.value.substring(1))).substring(%section.text.substring(%section.text.indexOf(%act.text.reference.value.substring(1))).indexOf('>')+1, %section.text.substring(%section.text.indexOf(%act.text.reference.value.substring(1))).indexOf('<')-%section.text.substring(%section.text.indexOf(%act.text.reference.value.substring(1))).indexOf('>')-1)) "idRef"; 
  act.text as text then {
    text.reference as reference then {
      reference.value as value -> note.extension as ext then NarrativeLink(value, ext) "narrativeLink";
    } "reference";
  } "text";
}


// source: Substitution permission Contains 1.3.6.1.4.1.19376.1.9.1.3.9.1 IHE Substitution Permission Content Module (DYNAMIC)
// target: http://build.fhir.org/ig/hl7ch/ch-emed/StructureDefinition-ch-emed-medicationdispense.html
group Substitution(source act: Act, target medicationDispense: MedicationDispense) {
  act -> medicationDispense.substitution as substitution then {
    act -> substitution.wasSubstituted as wasSubstituted, wasSubstituted.value = 'true' "wasSubstituted";

    //act.code as code -> substitution.type as type then CECodeableConcept(code, type) "type";
    // workaround, because the line above generates no uri for the oid
    act.code as actCode -> substitution.type as type, type.coding as coding then {
      actCode -> coding.system as systemCC, systemCC.value = 'http://terminology.hl7.org/CodeSystem/v3-substanceAdminSubstitution' "system";
      actCode.code as code -> coding.code as codeCC, codeCC.value = code "code";
      actCode.displayName as display -> coding.display as displayCC, displayCC.value = display "display";
    } "allowedCC";

  } "substitution";
}


// source: https://art-decor.org/art-decor/decor-templates--cdachemed-?section=templates&id=2.16.756.5.30.1.1.10.4.33
// target: http://build.fhir.org/ig/hl7ch/ch-emed/branches/master/StructureDefinition-ch-emed-medicationdispense.html
group ManufacturedMaterialEntryContentModule(source source : Supply, target medicationDispense : MedicationDispense, target medication : Medication) {
  source -> medication.id = 'med', medicationDispense.medication = create('Reference') as vt, vt.reference = '#med' "medication";
  
  // quantity value (number of packages)
  source.quantity as quantity -> medicationDispense.quantity as medDispQuantity then {
    // IHE-DIS: If the product-element contains package information, the unit attribute is not be present
    quantity.value as value -> medDispQuantity.value = value "value";

    // IHE-DIS: If the product-element does not contain package information, the unit attribut is present and the value SHALL be out of the UCUM code system
    quantity.unit as unit then {
      unit -> medDispQuantity.unit = unit "unit";
      unit -> medDispQuantity.system = 'http://unitsofmeasure.org' "ucum";
      unit -> medDispQuantity.code = unit "code";
    } "unit";
  } "quantity";
  
  source.product as product then {
    product.manufacturedProduct as manufacturedProduct then {
      manufacturedProduct.manufacturedMaterial as manufacturedMaterial then {

        // #dis.no.brandedmedication
        manufacturedMaterial.code as code then {
          code.originalText as text then {
            text.reference as reference -> medication.code as medCode then {
              reference.value as value -> medCode.extension as ext then NarrativeLink(value, ext) "narrativeLink";
            } "reference";
          } "text";
        } "code";

        manufacturedMaterial.asContent as asContent then {
          asContent.containerPackagedMedicine as containerPackagedMedicine then {
            containerPackagedMedicine.code as code -> medication.code as fhircode, fhircode.text = (%manufacturedMaterial.name.other) then CECodeableConcept(code, fhircode) "medication.code";
            containerPackagedMedicine.formCode as formCode -> medication.form as form then CECodeableConcept(formCode, form)  "medication.formCode";
            
            containerPackagedMedicine.capacityQuantity as capacityQuantity where (%containerPackagedMedicine.formCode.code='10219000') -> medication.amount = create('Ratio') as ratio then {
              // IHE: Case 1: If the capacityQuantity is given in countable units, the unit attribute SHALL NOT be present
              capacityQuantity where $this.unit.exists()=false then {
                capacityQuantity.value as value -> ratio.numerator = create('Quantity') as quantity, 
                      quantity.value = value, 
                      ratio.denominator = create('Quantity') as denominator
                      , 
                      denominator.value = '1'
                      "capacityQuantity"; 
              } "no unit";

              // IHE: Case 2: If the capacityQuantity is given in non-countable units, the unit attribute SHALL be present and the value SHALL be out of the UCUM code system.
              capacityQuantity where $this.unit.exists() then {
                capacityQuantity.unit as unit then {
                  capacityQuantity.value as value -> ratio.numerator = create('Quantity') as quantity, 
                      quantity.value = value, 
                      quantity.unit = unit, 
                      quantity.system = 'http://unitsofmeasure.org',
                      quantity.code = unit,
                      ratio.denominator	 = create('Quantity') as denominator
                      , 
                      denominator.value = '1',
                      denominator.unit = 'Package',
                      denominator.system = 'http://unitsofmeasure.org',
                      denominator.code = '1'
                      "capacityQuantity"; 
                } "capQuantUnit";
              } "unit";
            } "ratio";

          } "containerPackagedMedicine";
        } "asContent";       
        manufacturedMaterial.ingredient as ingredient -> medication.ingredient as ing then {
          ingredient.quantity as quantity -> ing.strength = create('Ratio') as strength then RTOPQPQRatio(quantity, strength) "strength";
          ingredient.ingredient as medingredient then {
              medingredient.code as code -> ing.item = create('CodeableConcept') as ingcode, ingcode.text = (%medingredient.name.other) then CECodeableConcept(code, ingcode) "ingredientcode";
          } "ingredient.ingredient";
        } "ingredient";
      } "manufacturedMaterial";
    } "manufacturedProduct";

    // dosage for normal dosing, as no sequences are present there
    source.entryRelationship as entry then {
      entry.substanceAdministration as substanceAdministration then {
        substanceAdministration where $this.entryRelationship.sequenceNumber.exists()=false
          -> medicationDispense.dosageInstruction as dosage then DosageInstructionsStartStopFrequency(substanceAdministration, dosage) "dosage";
      } "substanceAdministration";
    } "entry";
    
  } "product";
}


// source: https://art-decor.org/art-decor/decor-templates--cdachemed-?section=templates&id=2.16.756.5.30.1.1.10.4.42
// target: http://build.fhir.org/ig/hl7ch/ch-emed/branches/master/StructureDefinition-ch-emed-medicationdispense.html
group DispenseItemEntryContentModule(source section : Section, source source : Supply, source patient : Patient, target medicationDispense : MedicationDispense) {
//  source.templateId as template then TemplateID(template, medicationDispense) "templateID";
  source.id -> medicationDispense.identifier;
  patient -> medicationDispense.subject = create('Reference') as reference, reference.reference = reference(patient) "patient";
  source -> medicationDispense.status = 'completed' "completed";
  source.text as text then {
    text.reference as reference then {
      reference.value as value -> medicationDispense.extension as ext then NarrativeLink(value, ext) "narrativeLink";
    } "reference";
  } "text";
  source -> medicationDispense.contained = create('Medication') as medication then ManufacturedMaterialEntryContentModule(source, medicationDispense, medication) "medication";

  source.entryRelationship as entry where (typeCode='COMP' and substanceAdministration.templateId.root='2.16.756.5.30.1.1.10.4.37') 
    -> medicationDispense.dosageInstruction as dosage 
        then DosageInstructionsNonStructuredEntryContentModule(section, entry, dosage) "entryRelationShip 2.16.756.5.30.1.1.10.4.37";  

  source.entryRelationship as entryRelationship then {
    entryRelationship.substanceAdministration as substanceAdministration then {

      // dosage for split dosing, as sequences are present there
      substanceAdministration.entryRelationship as entryRelationship where (typeCode='COMP' and sequenceNumber.value>=0) 
        -> medicationDispense.dosageInstruction as dosage 
          then DosageInstructionsEntryDosageChange(substanceAdministration, entryRelationship, dosage) "entryRelationShip 2.16.756.5.30.1.1.10.4.36"; 

    } "substanceAdministration";
  } "entryRelationship";

  source.entryRelationship as entry where (typeCode='REFR' and substanceAdministration.templateId.where(root='1.3.6.1.4.1.19376.1.9.1.3.10').exists()) 
    -> medicationDispense.extension as ext then MTPReferenceEntryContentModule(entry, ext) "MTPReferenceEntry";   

  source.entryRelationship as entry where (typeCode='COMP' and act.templateId.where(root='2.16.756.5.30.1.1.10.4.2').exists()) then {
    entry.act as act -> medicationDispense.note as note then AnnotationComment(section, act, note) "annotation";
  } "entryRelationShip 2.16.756.5.30.1.1.10.4.2";  

  source.entryRelationship as entry where (typeCode='COMP' and act.templateId.where(root='1.3.6.1.4.1.19376.1.9.1.3.9.2').exists()) then {
    entry.act as act -> medicationDispense as medicationDispense then Substitution(act, medicationDispense) "substitution";
  } "entryRelationShip 1.3.6.1.4.1.19376.1.9.1.3.9.2";
}


// source: https://art-decor.org/art-decor/decor-templates--ch-pharm-?id=2.16.756.5.30.1.1.10.4.35 
// target: http://fhir.ch/ig/ch-emed/StructureDefinition/ch-emed-dosage-structured
// dosage for normal dosing, without sequences ("1.3.6.1.4.1.19376.1.5.3.1.4.7.1")
group DosageInstructionsStartStopFrequency(source source : SubstanceAdministration, target dosage: Dosage) {
  source.templateId as templateId where $this.root='1.3.6.1.4.1.19376.1.5.3.1.4.7.1' -> dosage.extension as ext then {
    source -> ext.url = 'http://fhir.ch/ig/ch-emed/StructureDefinition/ch-emed-ext-dosagetype' "url";
    source -> ext.value = create('Identifier') as valueIdentifier then {
      templateId.root as id -> valueIdentifier.value = id "normal dosing";
    } "valueIdentifier";
  } "extension";

  source as source -> dosage as dosage then EffectiveTimeStartEnd(source, dosage) "effective time start end";
  source as source -> dosage as dosage then EffectiveTimeWhen(source, dosage) "effective time when";
  source.routeCode as routeCode -> dosage.route as route then CECodeableConcept(routeCode, route) "routeCode";
  source as source -> dosage as dosage then DoseQuantity(source, dosage) "dose quantity";
}

// source https://art-decor.org/art-decor/decor-templates--ch-pharm-?id=2.16.756.5.30.1.1.10.4.36
// target: http://fhir.ch/ig/ch-emed/StructureDefinition/ch-emed-dosage-structured
// dosage for split dosing, with sequences
group DosageInstructionsEntryDosageChange(source source: substanceAdministration, source entry: entryRelationship, target dosage: Dosage) {
  source.templateId as templateId where (($this.root='1.3.6.1.4.1.19376.1.5.3.1.4.9') or ($this.root='1.3.6.1.4.1.19376.1.5.3.1.4.8'))
     -> dosage.extension as ext then {
        source -> ext.url = 'http://fhir.ch/ig/ch-emed/StructureDefinition/ch-emed-ext-dosagetype' "url";
        source -> ext.value = create('Identifier') as valueIdentifier then {
          templateId.root as id -> valueIdentifier.value = id "dosing type";
        } "valueIdentifier";
  } "extension";

  entry.sequenceNumber as sequenceNumber -> dosage.sequence = sequenceNumber "sequenceNumber";
  source as source -> dosage as dosage then EffectiveTimeStartEnd(source, dosage) "effective time start end";
  entry.substanceAdministration as source -> dosage as dosage then EffectiveTimeWhen(source, dosage) "effective time when";
  source.routeCode as routeCode -> dosage.route as route then CECodeableConcept(routeCode, route) "routeCode";
  entry.substanceAdministration as source -> dosage as dosage then DoseQuantity(source, dosage) "dose quantity";
}

// effective time start & end for dosage
group EffectiveTimeStartEnd(source source: substanceAdministration, target dosage: Dosage) {
  source.effectiveTime: IVL_TS as effectiveTime -> dosage.timing as timing share sharetiming then {
    effectiveTime -> timing.repeat as repeat then {
      effectiveTime -> repeat.bounds = create('Period') as period then {
        effectiveTime.low as low then {
          low.value as lowDate -> period.start = lowDate "lowDate";
        } "low";
        effectiveTime.high as high then {
          high.value as highDate -> period.end = highDate "highDate";
        } "high";
      } "period";
    } "repeat";
  } "effectiveTime IVL_TS";
}

// effective time when for dosage
group EffectiveTimeWhen(source source: substanceAdministration, target dosage: Dosage) {
  source.effectiveTime: EIVL_TS as effectiveTime -> dosage.timing as timing share sharetiming then {
    effectiveTime -> timing.repeat as repeat then {
      effectiveTime.event as event then {
        event.code as code -> repeat.when = code "code";
      } "event";
    } "repeat";
  } "effectiveTime EIVL_TS";
  source.effectiveTime: SXPR_TS as effectiveTime -> dosage.timing as timing share sharetiming then {
    effectiveTime -> timing.repeat as repeat then {
      effectiveTime.comp as comp then {
        comp.event as event then {
          event.code as code -> repeat.when = code "code";
        } "event";
      } "comp";
    } "repeat";
  } "effectiveTime SXPR_TS";
}

// dose quantity for dosage
group DoseQuantity (source source: substanceAdministration, target dosage: Dosage) {
  source.doseQuantity as doseQuantity -> dosage.doseAndRate as doseAndRate then {
    doseQuantity.center as center -> doseAndRate.dose = create('Quantity') as quantity then {
      center.value as value -> quantity.value = value "value";
    } "quantity";
  } "doseQuantity";
}


// source: https://art-decor.org/art-decor/decor-templates--ch-pharm-?section=templates&id=2.16.756.5.30.1.1.10.4.45
// target: http://build.fhir.org/ig/hl7ch/ch-emed/branches/master/StructureDefinition-ch-emed-ext-treatmentplan.html
group MTPReferenceEntryContentModule(source entryrelationship, target ext: Extension) {
  entryrelationship -> ext.url = 'http://fhir.ch/ig/ch-emed/StructureDefinition/ch-emed-ext-treatmentplan' "url";
  entryrelationship.substanceAdministration as substanceAdministration then {
    substanceAdministration.id as id -> ext.extension as ext then InnerExtensionId(id, ext) "InnerExtensionId";
    substanceAdministration.reference as reference then {
      reference.externalDocument as externalDocument then {
        externalDocument.id as id -> ext.extension as ext then InnerExtensionExternalDocumentId(id, ext) "InnerExtensionExternalDocumentId";
      } "externalDocument";
    } "substanceAdministration";
  } "id";
}


// source: https://art-decor.org/art-decor/decor-templates--ch-pharm-?section=templates&id=2.16.756.5.30.1.1.10.4.52
// target: http://build.fhir.org/ig/hl7ch/ch-emed/branches/master/StructureDefinition-ch-emed-dosage-nonstructured.html
group DosageInstructionsNonStructuredEntryContentModule(source section : Section, source entry : Element, target dosage : Dosage) {
  // see DispenseItemEntryContentModule
  entry.substanceAdministration as observation -> dosage.text = (%section.text.substring(%section.text.indexOf(%observation.text.reference.value.substring(1))).substring(%section.text.substring(%section.text.indexOf(%observation.text.reference.value.substring(1))).indexOf('>')+1, %section.text.substring(%section.text.indexOf(%observation.text.reference.value.substring(1))).indexOf('<')-%section.text.substring(%section.text.indexOf(%observation.text.reference.value.substring(1))).indexOf('>')-1)) "idRef"; 
  entry.substanceAdministration as observation then {
    observation.text as text then {
      text.reference as reference then {
        reference.value as value -> dosage.extension as ext then NarrativeLink(value, ext) "narrativeLink";
      } "reference";
    } "text";
  } "observation";
}


// _________________________ Template Type not specified   _________________________ 

group NarrativeLink(source url, target ext: Extension) {
  url -> ext.url = 'http://hl7.org/fhir/StructureDefinition/narrativeLink' "url";
  url -> ext.value = create('url') as value, value.value=url "value";
}

// target: http://build.fhir.org/ig/hl7ch/ch-emed/branches/master/StructureDefinition-ch-emed-ext-treatmentplan.html
group InnerExtensionExternalDocumentId(source source, target ext: Extension) {
  source -> ext.url = 'externalDocumentId' "url";
  source -> ext.value = create('Identifier') as id then II(source, id) "value";
}

// target: http://build.fhir.org/ig/hl7ch/ch-emed/branches/master/StructureDefinition-ch-emed-ext-treatmentplan.html
group InnerExtensionId(source source, target ext: Extension) {
  source -> ext.url = 'id' "url";
  source -> ext.value = create('Identifier') as id then II(source, id) "value";
}

// target: http://build.fhir.org/ig/hl7ch/ch-emed/branches/master/StructureDefinition-ch-emed-ext-substitution.html
//group ExtensionSubstitution(source supply, target ext: Extension) {
//  supply -> ext.url = 'http://fhir.ch/ig/ch-emed/StructureDefinition/ch-emed-ext-substitution' "url";
  // TBD
//  supply -> ext.value = create('CodeableConcept') as valueCC then {
//    supply -> valueCC.text = 'test' "allowedCC";
//  } "valueCC";
  //then CECodeableConcept(supply, valueCC);
//}